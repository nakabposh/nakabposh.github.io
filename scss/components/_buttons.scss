@use "../abstracts/typography";
@use "../abstracts/colors";
@use "../abstracts/mixins";

.btn {
  padding: 0.75em 1.25em;

  font-family: typography.$ff-primary-serif;
  font-size: typography.$fs-350;
  font-size: typography.$fw-600;
  text-transform: uppercase;

  border-radius: 100vmax;

  &-primary {
    background-color: colors.$clr-yellow;
    color: colors.$clr-very-dark-desatured-blue;

    @include mixins.mq(large, up) {
      background-color: colors.$clr-white;

      // * Active state (only for desktop)
      transition-property: background-color color;
      transition-duration: 300ms;
      transition-timing-function: ease-out;

      &:hover {
        background-color: rgba(214, 214, 214, 0.261);
        color: colors.$clr-white;
      }
    }
  }

  &-cta {
    // * This variable holds the color of the link's underline
    // * (by default, if no BEM modifier is specified on the element, the variable is assigned to currentColor)
    --_background-color-underline: currentColor;

    &--yellow {
      --_background-color-underline: #{colors.$clr-yellow};
    }

    &--pink {
      --_background-color-underline: #{colors.$clr-soft-red};
    }

    position: relative;

    // * This ensures that the underline, trated as a pseudo-element,
    // * will never go under the link itself, even if its z-index is -1
    isolation: isolate;

    padding: 0;

    font-family: typography.$ff-primary-serif;
    font-weight: typography.$fw-900;
    letter-spacing: 0.1em;
    text-transform: uppercase;
    color: colors.$clr-very-dark-desatured-blue;

    &::after {
      content: "";

      position: absolute;
      bottom: 0;
      left: 50%;
      z-index: -1;

      width: 110%;
      height: 8px;
      background-color: var(--_background-color-underline);
      opacity: 0.6;

      translate: -50% 0;

      border-radius: 100vmax;
    }

    // * Active state
    &::after {
      transition: opacity 250ms ease-in;
      opacity: 0.3;
    }

    &:hover::after {
      opacity: 1;
    }
  }
}
